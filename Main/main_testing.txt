*** Start of Indexing Strings Demo ***
Type not empty string (q - to quit):
01234567890123456789012345678901234567890123456789012345678901234567890123456789Hello
Type the character position within the string:
2
The character found at 2 position is 'l'
Type not empty string (q - to quit):
01234567890123456789012345678901234567890123456789012345678901234567890123456789q
*** Start of Measuring Strings Demo ***
Type a string (q - to quit):
theotherside
The length is 12
Type a string (q - to quit):

The length is 0
Type a string (q - to quit):
q
*** End of Measuring Strings Demo ***

*** Start of Concatenating Strings Demo ***
Type the 1st string (q - to quit):
I like
Type the 2nd string:
cheese
Concatenated string is 'I like cheese'
Type the 1st string (q - to quit):
q
*** End of Concatenating Strings Demo ***

*** Start of Comparing Strings Demo ***
Type the 1st string to compare (q - to quit):
123456
Type the 2nd string to compare:
123
1st string is greater than 2nd
Type the 1st string to compare (q - to quit):
q
*** End of Comparing Strings Demo ***

*** Start of Converting Strings to int Demo ***
Type the int numeric string (q - to quit):
1234567890
Converted number is 1234567890
Type the int numeric string (q - to quit):
987456
Converted number is 987456
Type the int numeric string (q - to quit):
123
Converted number is 123
Type the int numeric string (q - to quit):
8888
Converted number is 8888
Type the int numeric string (q - to quit):
123
Converted number is 123
Type the int numeric string (q - to quit):
99
Converted number is 99
Type the int numeric string (q - to quit):
q
*** End of Converting Strings to int Demo ***

*** Start of Converting Strings to double Demo ***
Type the double numeric string (q - to quit):
2
Converted number is 2.000000
Type the double numeric string (q - to quit):
123
Converted number is 123.000000
Type the double numeric string (q - to quit):
8888
Converted number is 8888.000000
Type the double numeric string (q - to quit):
$a
Converted number is 0.000000
Type the double numeric string (q - to quit):
a55
Converted number is 0.000000
Type the double numeric string (q - to quit):
123
Converted number is 123.000000
Type the double numeric string (q - to quit):
99
Converted number is 99.000000
Type the double numeric string (q - to quit):
q
 End of Converting Strings to double Demo ***

*** Start of Tokenizing Words Demo ***
Type a few words separated by space(q - to quit):
! . $ / \ \n \t = + _ - !
Word #1 is '!'
Word #2 is '.'
Word #3 is '$'
Word #4 is '/'
Word #5 is '\'
Word #6 is '\n'
Word #7 is '\t'
Word #8 is '='
Word #9 is '+'
Word #10 is '_'
Word #11 is '-'
Word #12 is '!'
Type a few words separated by space (q - to quit):
This is a test for a sentence that has more than 198 characters! This is a test for a sentence that has more than 198 characters! This is a test for a sentence that has more than 198 characters! 199!
Word #1 is 'This'
Word #2 is 'is'
Word #3 is 'a'
Word #4 is 'test'
Word #5 is 'for'
Word #6 is 'a'
Word #7 is 'sentence'
Word #8 is 'that'
Word #9 is 'has'
Word #10 is 'more'
Word #11 is 'than'
Word #12 is '198'
Word #13 is 'characters!'
Word #14 is 'This'
Word #15 is 'is'
Word #16 is 'a'
Word #17 is 'test'
Word #18 is 'for'
Word #19 is 'a'
Word #20 is 'sentence'
Word #21 is 'that'
Word #22 is 'has'
Word #23 is 'more'
Word #24 is 'than'
Word #25 is '198'
Word #26 is 'characters!'
Word #27 is 'This'
Word #28 is 'is'
Word #29 is 'a'
Word #30 is 'test'
Word #31 is 'for'
Word #32 is 'a'
Word #33 is 'sentence'
Word #34 is 'that'
Word #35 is 'has'
Word #36 is 'more'
Word #37 is 'than'
Word #38 is '198'
Word #39 is 'characters!'
Word #40 is '199!'
Type a few words separated by space (q - to quit):
q
*** End of Tokenizing Words Demo ***

*** Start of Tokenizing Phrases Demo ***
Type a few phrases separated by comma(q - to quit):
, , ,
Phrase $1 is ' '
Phrase $2 is ' '
Phrase $3 is ' '
Type a few phrases separated by comma(q - to quit):
1st, 2nd phrase, The third phrase, This is 4th phrase, This is the 5th phrase
Phrase $1 is '1st'
Phrase $2 is ' 2nd phrase'
Phrase $3 is ' The third phrase'
Phrase $4 is ' This is 4th phrase'
Phrase $5 is ' This is the 5th phrase'
Type a few phrases separated by comma(q - to quit):
q
*** End of Tokenizing Phrases Demo ***


C:\Users\Peter\Documents\CPR101\GroupProject\Final Submission V1\2 Final Submission\CPR Group 1 Version 2\x64\Debug\CPR Group 1 Version 2.exe (process 30908) exited with code 0.
Press any key to close this window . . .